{"version":3,"sources":["webpack://./src/components/tab/_tab.scss","webpack://./src/partial/scss/mixins/_states.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AA0QA,QA7PE,qCAAA,CACA,uCAAA,CACA,gCAAA,CACA,6DAAA,CAEA,0CAAA,CAIA,2CAAA,CACA,4CAAA,CACA,6CAAA,CAEA,uCAAA,CAEA,yCAAA,CAEA,uBAAA,CACA,wBAAA,CACA,uBAAA,CACA,mBAAA,CAEA,oBAnBF,CAyBE,iBACE,qCAAA,CAEA,0CAAA,CCaH,sCAAA,CACA,4CAAA,CACA,8CAAA,CACA,mCAAA,CACA,iCAAA,CACA,mCAAA,CACA,qCAAA,CACA,kCDpCD,CAqBU,0CACE,0CAnBZ,CAsBQ,qCACE,yCApBV,CA2BY,kGACE,+BAtBd,CAkCM,uCACE,qCAhCR,CAmCY,qEACE,oCAAA,CACA,oBAAA,CACA,+CAAA,CACA,4CAAA,CACA,iDAAA,CACA,iDAjCd,CAqCY,wEACE,8CAAA,CACA,0CAAA,CACA,MAAA,CACA,iBAAA,CACA,wBAnCd,CAoCc,6EACE,wBAAA,CACA,oBAAA,CACA,+CAAA,CACA,4CAAA,CACA,qCAAA,CACA,mCAlChB,CA+CE,iBACE,eAAA,CACA,UA7CJ,CEGI,4BFwCF,iBAII,YAAA,CACA,eAAA,CACA,UA3CJ,CACF,CA4CI,oBAEE,iDAAA,CACA,YAAA,CACA,eAAA,CACA,YAAA,CACA,SAAA,CACA,UA3CN,CA4CM,8BACE,kBAAA,CACA,YAAA,CACA,sBAAA,CACA,iBAAA,CACA,kBA1CR,CA4CQ,0CACE,cA1CV,CA4CQ,yCACE,eA1CV,CA8CU,+CACE,+BA5CZ,CAiDY,qDAEE,iBAhDd,CAmDU,iDACE,wBAjDZ,CAoDQ,qCACE,iDAAA,CAGA,8BAAA,CAEA,WAAA,CAAA,qCAAA,CACA,sBAAA,CACA,oBAAA,CACA,iDApDV,CCtFC,2CACC,YDwFF,CCrFC,sGAEC,gCAAA,CACA,kCAAA,CACA,gCAAA,CACA,gCDsFF,CChHE,0DACC,qHDkHH,CC7GE,2DACC,yHD+GH,CAuCY,iDACE,sBArCd,CAyCY,iDACE,wBAvCd,CA0CU,2CACE,sBAAA,CACA,8CAAA,CACA,4CAAA,CACA,iBAAA,CACA,kBAxCZ,CA2CQ,uCACE,oCAAA,CACA,YAAA,CACA,0CAAA,CACA,4CAAA,CACA,sBAAA,CACA,iBAAA,CACA,uBAzCV,CAkDI,gCACE,uBAAA,CACA,YAhDN,CAiDM,0CACE,aA/CR,CAuDI,iDAGE,uCAAA,CACA,yCAvDN,CAmDI,8CAGE,sCAAA,CACA,wCAnDN,CA+CI,iDAGE,uCAAA,CACA,yCA/CN,CA2CI,8CAGE,sCAAA,CACA,wCA3CN","file":"tab.min.css","sourcesContent":["@import \"../../partial/scss/base\";\n\n@import \"../../partial/scss/base\";\n\n@mixin tab {\n  @include tab-tokens;\n  @include tab-darkmode;\n  @include tab-nav;\n  @include tab-content;\n  @include tab-sizes;\n}\n\n@mixin tab-tokens {\n  --tab-color: var(--color-secondary-08);\n  --tab-surface: var(--color-secondary-01);\n  --tab-background: var(--bg-color);\n  --tab-border: var(--surface-width-lg) solid var(--interactive);\n  \n  --tab-nav-border: var(--color-secondary-04);\n\n  \n\n  --tab-padding-small: var(--spacing-scale-3x) ;\n  --tab-padding-medium: var(--spacing-scale-2x) ;\n  --tab-padding-large: var(--spacing-scale-base) ;\n  // padding left e right\n  --tab-padding-x: var(--spacing-scale-3x);\n  // pading top e bottom\n  --tab-padding-y: var(--tab-padding-medium);\n\n  --tab-result-small: 90px;\n  --tab-result-medium: 60px;\n  --tab-result-large: 58px;\n  --tab-result-y: 60px;\n\n  --tab-outcome-y: 80px;\n\n  \n}\n\n@mixin tab-darkmode {\n  &.inverted {\n    --tab-color: var(--color-secondary-01);\n    // --tab-border:  4px solid var(--color-secondary-02)\n    --tab-nav-border: var(--color-secondary-02);\n    @include dark-mode;\n    ul {\n      .tab-item {\n        &:hover {\n          .name {\n            --tab-background: var(--color-secondary-02);\n          }\n        }\n        button {\n          color: var(--color-secondary-01) !important;\n          &:hover {\n            .name {\n              color: var(--color-secondary-01);\n            }\n          }\n          &:focus {\n            .name {\n              color: var(--color-secondary-01);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin tab-nav {\n  &[data-counter=\"true\"] {\n    .tab-nav {\n      ul {\n        margin-bottom: v(spacing-scale-9x);\n        .tab-item {\n          &[not-tab=\"true\"] {\n            .name {\n              color: v(color-secondary-08, $color-secondary-08);\n              display: inline-block;\n              font-size: v(font-size-scale-up-03, $font-size-scale-up-03);\n              font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n              line-height: v(font-size-scale-up-03, $font-size-scale-up-03);\n              padding: var(--tab-padding-x) var(--tab-padding-y);\n              \n\n            }\n            .outcome {\n              font-size: v(font-size-scale-up-02, $font-size-scale-up-02);\n              font-weight: v(font-weight-regular, $font-weight-regular);\n              left: 0;\n              position: absolute;\n              top: v(tab-outcome-y);\n              span {\n                color: var(--interactive);\n                display: inline-block;\n                font-size: v(font-size-scale-up-03, $font-size-scale-up-03);\n                font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n                margin-bottom: v(spacing-scale-4x);\n                margin-left: v(spacing-scale-3x);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n  \n\n\n  .tab-nav {\n    overflow-x: auto;\n    width: 100%;\n    @include media-breakpoint-down(sm) {\n      display: flex;\n      overflow-x: auto;\n      width: 100%;\n    }\n    ul {\n      // border-bottom: 1px solid v(color-secondary-04, $color-secondary-04);\n      border-bottom: 1px solid var(--color-secondary-04);\n      display: flex;\n      margin-bottom: 0;\n      margin-top: 0;\n      padding: 0;\n      width: 100%;\n      .tab-item {\n        align-items: center;\n        display: flex;\n        justify-content: center;\n        position: relative;\n        white-space: nowrap;\n        \n        &:first-child {\n          padding-left: 0;\n        }\n        &:last-child {\n          padding-right: 0;\n        }\n        &.is-active {\n\n          button {\n            border-bottom: var(--tab-border);\n            // padding-bottom: v(tab-size);\n            \n            \n\n            .name {\n              // color: v(color-primary-darken-02, $color-primary-darken-02);\n              color: --tab-color;\n            }\n          }\n          .results {\n            color: var(--interactive);\n          }\n        }\n        button {\n          --focus-offset: calc(var(--spacing-scale-half) * -1);\n          @include focus;\n          @include hover;\n          background-color: transparent;\n          border: none;\n          border-bottom: 4px solid transparent;\n          color: var(--tab-color);\n          display: inline-block;\n          padding: var(--tab-padding-y) var(--tab-padding-x);\n          &:hover {\n            .name {\n              color: var(--tab-color);\n            }\n          }\n          &:focus {\n            .name {\n              color: var(--interactive);\n            }\n          }\n          .name {\n            color: var(--tab-color);\n            font-size: v(font-size-scale-up-02, $font-size-scale-up-02);\n            font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n            text-align: center;\n            white-space: nowrap;\n          }\n        }\n        .results {\n          color: v(color-secondary-07, $color-secondary-07);\n          display: flex;\n          font-size: v(font-size-scale-base, $font-size-scale-base);\n          font-weight: v(font-weight-semi-bold, $font-weight-semi-bold);\n          justify-content: center;\n          position: absolute;\n          top: var(--tab-result-y);\n        }\n      }\n    }\n  }\n}\n\n@mixin tab-content {\n  .tab-content {\n    .tab-panel {\n      color: var(--text-color);\n      display: none;\n      &.is-active {\n        display: block;\n      }\n    }\n  }\n}\n\n@mixin tab-sizes {\n  @each $size in \"xsmall\", \"small\", \"medium\", \"large\" {\n    &.#{$size},\n    &[#{$size}],\n    &.is-#{$size} {\n      --tab-result-y: var(--tab-result-#{$size});\n      --tab-padding-y: var(--tab-padding-#{$size});\n    }\n  }\n}\n\n@mixin tab-nav-gradiente {\n  .tab-nav-right::after {\n    //TODO: Atualizar o código com padrão de gradiente quando estiver pronto\n    background: linear-gradient(\n      to right,\n      rgba(0, 0, 0, var(--surface-opacity-none)),\n      rgba(var(--rgb-secondary-09), 0.2)\n    );\n    content: \"\";\n    height: var(--height-nav, 10px);\n    // --height-nav:60px;\n    left: var(--right-gradient-nav, 0);\n    opacity: 1;\n    pointer-events: none;\n    position: absolute;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n    visibility: visible;\n    width: 3%;\n    z-index: 1;\n  }\n\n  .tab-nav-left::before {\n    background: linear-gradient(\n      to left,\n      rgba(0, 0, 0, var(--surface-opacity-none)),\n      rgba(var(--rgb-secondary-09), 0.2)\n    );\n    content: \"\";\n    height: var(--height-nav, 10px);\n    // --height-nav:60px;\n    left: 0;\n    opacity: 1;\n    pointer-events: none;\n    position: absolute;\n    transition: opacity 0.3s 0s, visibility 0s 0s;\n\n    visibility: visible;\n    width: 3%;\n    z-index: 1;\n  }\n}\n\n.#{$prefix}tab {\n  @include tab;\n}\n","// Desabilitado\n@mixin disabled {\n\tcursor: not-allowed;\n\topacity: var(--disabled);\n\n\t* {\n\t\tpointer-events: none;\n\t}\n}\n\n// Hover\n@mixin hover {\n\t&:not(:disabled) {\n\t\t&:hover {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--hover)),\n\t\t\t\trgba(var(--interactive-rgb), var(--hover))\n\t\t\t);\n\t\t}\n\t\t&:active {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed)),\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed))\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Focus\n@mixin focus {\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible,\n\t&:focus-visible {\n\t\toutline-color: var(--focus-color);\n\t\toutline-offset: var(--focus-offset);\n\t\toutline-style: var(--focus-style);\n\t\toutline-width: var(--focus-width);\n\t}\n}\n\n@mixin focus-shadow {\n\tborder-color: var(--focus-color);\n\tbox-shadow: 0 0 0 var(--surface-width-md) var(--focus-color);\n\toutline: none;\n}\n\n// Ativo\n@mixin active {\n\tbackground: var(--active);\n\tcolor: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n\t--text-color: var(--color-secondary-01);\n\t--interactive: var(--color-primary-pastel-01);\n\t--interactive-rgb: var(--rgb-primary-pastel-01);\n\t--visited: var(--color-secondary-04);\n\t--hover: var(--surface-opacity-sm);\n\t--pressed: var(--surface-opacity-lg);\n\t--focus-color: var(--color-support-10);\n\t--active: var(--color-secondary-01);\n}\n@mixin light-mode {\n\t--text-color: var(--color-secondary-08);\n\t--interactive: var(--color-primary-default);\n\t--interactive-rgb: var(--rgb-primary-default);\n\t--visited: var(--color-primary-darken-01);\n\t--hover: var(--surface-opacity-xs);\n\t--pressed: var(--surface-opacity-md);\n\t--focus-color: var(--color-support-03);\n\t--active: var(--color-primary-darken-01);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}